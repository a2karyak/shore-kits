#
#     Shore-kits -- Benchmark implementations for Shore-MT
#   
#                       Copyright (c) 2007-2009
#      Data Intensive Applications and Systems Labaratory (DIAS)
#               Ecole Polytechnique Federale de Lausanne
#   
#                         All Rights Reserved.
#   
#   Permission to use, copy, modify and distribute this software and
#   its documentation is hereby granted, provided that both the
#   copyright notice and this permission notice appear in all copies of
#   the software, derivative works or modified versions, and any
#   portions thereof, and that both notices appear in supporting
#   documentation.
#   
#   This code is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. THE AUTHORS
#   DISCLAIM ANY LIABILITY OF ANY KIND FOR ANY DAMAGES WHATSOEVER
#   RESULTING FROM THE USE OF THIS SOFTWARE.
#


#
# @file:  shore.conf
#
# @brief: Shore-kits configuration file
#                                                                          
# There are three supported benchmarks: TPC-C, TPC-B, and TM-1 (aka
# Nokia Network Database Benchmark). A scaling factor of one (1)
# translates to, respectively, 1 wh (130MB), 1 branch (20 MB), and
# 10000 subscribers (15MB).
#



############################################################################
#                                                                          #
# Predefined configurations                                                #
#                                                                          #
# Each configuration has two parts: the name (defined just below),         #
# followed by a section of name-* parameters which are specific to         #
# that configuration. These include benchmark selection, locations of      #
# files, etc.                                                              #
#                                                                          #
# Notes:                                                                   #
# - Make sure to have only 1 "db-config" parameter enabled.                #
#                                                                          #
############################################################################


##### TPC-C #####

#db-config = 1wh
#db-config = 10wh
#db-config = 100wh
#db-config = 300wh

#db-config = 1wh-nl
#db-config = 10wh-nl
#db-config = 100wh-nl
#db-config = 300wh-nl


##### TPC-B #####

#db-config = tpcb100

#db-config = tpcb100-nl


##### TM-1  #####

db-config = 1sf-tm1
#db-config = 10sf-tm1
#db-config = 100sf-tm1

#db-config = 1sf-tm1-nl
#db-config = 10sf-tm1-nl
#db-config = 100sf-tm1-nl



############################################################################
#                                                                          #
# Clobber device                                                           #
#                                                                          #
# Clobber the existing device file (if any) and populate a new             #
# database (1=yes,0=no).                                                   #
#                                                                          #
# Notes:                                                                   #
# - Log recovery happens before Shore checks this option, so delete        #
#   the log for a completely fresh start.                                  #
# - For disk-based data and a large buffer pool, it is *significantly*     #
#   faster to load a new database than warm up an existing one.            #
#                                                                          #
############################################################################

db-clobberdev = 1    ### It will populate a new database
#db-clobberdev = 0     ### It will open an existing database



############################################################################
#                                                                          #
# Fake I/O delay                                                           #
#                                                                          #
# Impose an artificial delay whenever there is an I/O operation. This      #
# mechanism allows to decouple the I/O subsystem performance from the      #
# measurements by storing the database on an in-memory file system. The    #
# artificial delay simulates a high-end I/O subsystem, such that all I/O   #
# requests can proceed in parallel but must each still pay the cost of an  #
# I/O. This arrangement is somewhat pessimistic because it assumes every   #
# access requires the same latency. But, it ensures that all aspects of    #
# the storage manager are exercised.                                       #
#                                                                          #
# shore-fakeiodelay-enable: Enable/Disable the fake I/O delay mechanism    #
# shore-fakeiodelay       : The imposed delay, in usec                     #
#                                                                          #
############################################################################

##### Enable/Disable fake I/O delay (0/1);
#shore-fakeiodelay-enable = 0
shore-fakeiodelay-enable = 1

##### The imposed delay (in usec) #####
#shore-fakeiodelay = 5
shore-fakeiodelay = 0



############################################################################
#                                                                          #
# Logging                                                                  #
#                                                                          #
############################################################################

##### Enable/Disable logging (yes/no) #####
#shore-logging = no
shore-logging = yes

##### Misc #####
shore-errlog = info # one of {none emerg fatal alert internal error warning info debug}
shore-diskrw = /export/home/ipandis/DEV/shore-lomond/installed/bin/diskrw


############################################################################
#                                                                          #
# Number of page cleaners                                                  #
#                                                                          #
# Number of asynchronous page cleaners to use.                             #
# Generally one per physical disk is good.                                 #
#                                                                          #
############################################################################

shore-pagecleaners = 8



############################################################################
#                                                                          #
# Loading parameters                                                       #
#                                                                          #
# db-loaders:                                                              #
# Number of loader threads. More gives higher parallelism but deadlocks    #
# are more likely as well. 10-20 usually gives the shortest overall load   #
# time.                                                                    # 
#                                                                          #
# db-record-preloads:                                                      #
# Number of (single-threaded) preloads per worker to do before firing up   #
# the threads. Buffers loader threads so they deadlock less, but at the    #
# cost of increased serial execution (reduced parallelism).                #
#                                                                          #
############################################################################

##### Number of loader threads #####
db-loaders = 10
#db-loaders = 20

##### Number of preloads per worker #####
db-record-preloads = 2000



############################################################################
#                                                                          #
# Worker parameters                                                        #
#                                                                          #
############################################################################

##### Number of worker threads #####
#db-workers = 100
db-workers = 64

##### srmw-queue spin #####
db-worker-queueloops = 1
#db-worker-queueloops = 2000
#db-worker-queueloops = 10000

###### worker queue batch sz #####
# look also client batch sz
db-worker-inp-queue-sz = 15
db-worker-com-queue-sz = 0




############################################################################
#                                                                          #
# Client parameters                                                        #
#                                                                          #
############################################################################

##### Think time  #####
# note: it should be combined with batchsz=1
db-cl-thinktime = 0

##### Client batch sz #####
#db-cl-batchsz = 1
db-cl-batchsz = 30




############################################################################
#                                                                          #
# Platform-specific parameters                                             #
#                                                                          #
############################################################################

##### CPU Counts  #####

# hard-limit (machine dependent)
sys-maxcpucount = 64
# soft-limit
sys-activecpucount = 64



############################################################################
#                                                                          #
# Default values for the (measure) and (test) commands                     #
#                                                                          #
############################################################################

# MEASURE
measure-num-queried = 32    # no of whs queried
measure-spread      = 1     # 0=No,1=Yes
measure-num-threads = 32
measure-duration    = 30    # duration of each iteration (in secs.)
measure-trx-id      = 102   # 2=Base-Pay
measure-iterations  = 2
measure-sli         = 0
measure-cl-binding  = 0     # client binding policy - 0=NoBinding,1=Adjacent,2=SpreadToCores

# TEST
# WARNING: the test command is innacurate. Use MEASURE instead
test-num-queried = 32       # no of whs queried
test-spread      = 1        # 0=No,1=Yes
test-num-threads = 32
test-num-trxs    = 10       # no of trxs per thread
test-trx-id      = 111      # e.g. 2=Base-Pay
test-iterations  = 2 
test-sli         = 0        # 0=No,1=Yes
test-cl-binding  = 0        # client binding policy - 0=NoBinding,1=Adjacent,2=SpreadToCores





############################################################################
#                                                                          #
#                                                                          #
# Predefined configurations - BASELINE                                     #
#                                                                          #
#                                                                          #
############################################################################


#########################
####                 ####
#### 1WH DB (~100MB) ####
####                 ####
#########################


### Device file
1wh-device = databases/shore1wh

### Device quota (in KB)
### 200MB
1wh-devicequota = 204800

### Buffer pool size (in KB)
### 1GB (db in memory)
1wh-bufpoolsize = 1024000

### Location of log directory
1wh-logdir = log1

### Size of log (in KB)
### 1GB 
1wh-logsize = 1024000

### Size of log buffer (in KB)
### 80MB
1wh-logbufsize = 81920

### tpcc-sf
1wh-sf = 1

### system
1wh-system = baseline

### benchmark
1wh-benchmark = tpcc



########################
####                ####
#### 10WH DB (~1GB) ####
####                ####
########################


### Device file
10wh-device = databases/shore10wh

### Device quota (in KB)
### 12GB
10wh-devicequota = 12097152

### Buffer pool size (in KB)
### 4GB (db in memory)
10wh-bufpoolsize = 4096000

### Location of log directory
10wh-logdir = log10

### Size of log (in KB)
### 2GB 
10wh-logsize = 2048000

### Size of log buffer (in KB)
### 80MB
10wh-logbufsize = 81920

### tpcc-sf
10wh-sf = 10

### system
10wh-system = baseline

### benchmark
10wh-benchmark = tpcc



##########################
####                  ####
#### 100WH DB (~13GB) ####
####                  ####
##########################


### Device file
100wh-device = databases/shore100wh

### Device quota (in KB)
### 20GB
100wh-devicequota = 20971520

### Buffer pool size (in KB)
### 12GB (db in memory)
#100wh-bufpoolsize = 12582912
### 5GB (5/13~40% in mem)
100wh-bufpoolsize = 5242880

### Location of log directory
100wh-logdir = log100

### Size of log (in KB)
### 2GB
100wh-logsize = 2048000

### Size of log buffer (in KB)
### 80MB
100wh-logbufsize = 81920

### tpcc-sf
100wh-sf = 100

### system
100wh-system = baseline

### benchmark
100wh-benchmark = tpcc



############################
####                    ####
#### 1000WH DB (~100GB) ####
####                    ####
############################


### Device file
1000wh-device = databases/shore1000wh

### Device quota (in KB)
### 200GB
1000wh-devicequota = 204800000

### Buffer pool size (in KB)
### 10GB (db in disk)
1000wh-bufpoolsize = 10240000

### Location of log directory
1000wh-logdir = dsklog

### Size of log (in KB)
### 4GB
1000wh-logsize = 4096000

### Size of log buffer (in KB)
### 80MB
1000wh-logbufsize = 81920

### tpcc-sf
1000wh-sf = 1000

### system
1000wh-system = baseline

### benchmark
1000wh-benchmark = tpcc



#########################
####                 ####
####    100 Branch   ####
#### TPC-B DB (~1GB) ####
####                 ####
#########################


### Device file
tpcb100-device = databases/tpcb100

### Device quota (in KB)
### 12GB
tpcb100-devicequota = 12097152

### Buffer pool size (in KB)
### 4GB (db in memory)
tpcb100-bufpoolsize = 4096000

### Location of log directory
tpcb100-logdir = tpcblog100

### Size of log (in KB)
### 2GB 
tpcb100-logsize = 2048000

### Size of log buffer (in KB)
### 80MB
tpcb100-logbufsize = 8192

### Number of log segments
tpcb100-logcount = 10

### tpcc-sf
tpcb100-sf = 100


### system
tpcb100-system = baseline

### benchmark
tpcb100-benchmark = tpcb




#####################
####             ####
#### 1SF TM-1 DB ####
####             ####
#####################

### Device file
1sf-tm1-device = databases/tm1-db-1sf

### Device quota (in KB)
### 20MB
1sf-tm1-devicequota = 20480

### Buffer pool size (in KB)
### 100MB (db in memory)
1sf-tm1-bufpoolsize = 102400

### Location of log directory
1sf-tm1-logdir = log-tm1-1

### Size of log (in KB)
### 100MB 
1sf-tm1-logsize = 102400

### Size of log buffer (in KB)
### 80MB
1sf-tm1-logbufsize = 81920

### tm1-sf
1sf-tm1-sf = 1

### system
1sf-tm1-system = baseline

### benchmark
1sf-tm1-benchmark = tm1




######################
####              ####
#### 10SF TM-1 DB ####
####              ####
######################

### Device file
10sf-tm1-device = databases/tm1-db-10sf

### Device quota (in KB)
### 200MB
10sf-tm1-devicequota = 204800

### Buffer pool size (in KB)
### 1GB (db in memory)
10sf-tm1-bufpoolsize = 1024000

### Location of log directory
10sf-tm1-logdir = log-tm1-10

### Size of log (in KB)
### 1GB 
10sf-tm1-logsize = 1024000

### Size of log buffer (in KB)
### 80MB
10sf-tm1-logbufsize = 81920

### tm1-sf
10sf-tm1-sf = 10

### system
10sf-tm1-system = baseline

### benchmark
10sf-tm1-benchmark = tm1





#######################
####               ####
#### 100SF TM-1 DB ####
####               ####
#######################

### Device file
100sf-tm1-device = databases/tm1-db-100sf

### Device quota (in KB)
### 2GB
100sf-tm1-devicequota = 2097152

### Buffer pool size (in KB)
### 2GB (db in memory)
100sf-tm1-bufpoolsize = 2097152

### Location of log directory
100sf-tm1-logdir = log-tm1-100

### Size of log (in KB)
### 1GB 
100sf-tm1-logsize = 1024000

### Size of log buffer (in KB)
### 80MB
100sf-tm1-logbufsize = 81920

### tm1-sf
100sf-tm1-sf = 100

### system
100sf-tm1-system = baseline

### benchmark
100sf-tm1-benchmark = tm1



############################################################################
#                                                                          #
#                                                                          #
# Predefined configurations - DORA                                         #
#                                                                          #
#                                                                          #
############################################################################


 
#######################################
####                               ####
#### 100WH DB + NOLOCK-IDX (~13GB) ####
####                               ####
#######################################

### Device file
100wh-nl-device = databases/shore100wh-nl

### Device quota (in KB)
### 20GB
100wh-nl-devicequota = 20971520

### Buffer pool size (in KB)
### 5GB (5/13~40% in mem)
100wh-nl-bufpoolsize = 5242880

### Location of log directory
100wh-nl-logdir = log100-nl

### Size of log (in KB)
### 2GB 
100wh-nl-logsize = 2048000

### Size of log buffer (in KB)
### 80MB
100wh-nl-logbufsize = 81920

### tpcc-specific
100wh-nl-loadatadir = flatfiles/sf100

### tpcc-sf
100wh-nl-sf = 100

### dora-sf
100wh-nl-dora-sf = 1

### system
100wh-nl-system = dora

### benchmark
100wh-nl-benchmark = tpcc



#####################################
####                             ####
#### 10WH DB + NOLOCK-IDX (~1GB) ####
####                             ####
#####################################

### Device file
10wh-nl-device = databases/shore10wh-nl

### Device quota (in KB)
### 4GB
10wh-nl-devicequota = 4194304

### Buffer pool size (in KB)
### 1GB (1/3=33% db in memory)
10wh-nl-bufpoolsize = 1048576

### Location of log directory
10wh-nl-logdir = log10-nl

### Size of log (in KB)
### 2GB 
10wh-nl-logsize = 2048000

### Size of log buffer (in KB)
### 80MB
10wh-nl-logbufsize = 81920

### tpcc-sf
10wh-nl-sf = 10

### dora-sf
10wh-nl-dora-sf = 1

### system
10wh-nl-system = dora

### benchmark
10wh-nl-benchmark = tpcc



##################################
####                          ####
#### 1SF TM-1 DB + NOLOCK-IDX ####
####                          ####
##################################

### Device file
1sf-tm1-nl-device = databases/tm1-db-1sf-nl

### Device quota (in KB)
### 20MB
1sf-tm1-nl-devicequota = 20480

### Buffer pool size (in KB)
### 100MB (db in memory)
1sf-tm1-nl-bufpoolsize = 102400

### Location of log directory
1sf-tm1-nl-logdir = log-tm1-1-nl

### Size of log (in KB)
### 100MB 
1sf-tm1-nl-logsize = 102400

### Size of log buffer (in KB)
### 80MB
1sf-tm1-nl-logbufsize = 81920

### tm1-sf
1sf-tm1-nl-sf = 1

### dora-sf
1sf-tm1-nl-dora-sf = 1

### system
1sf-tm1-nl-system = dora

### benchmark
1sf-tm1-nl-benchmark = tm1



###################################
####                           ####
#### 10SF TM-1 DB + NOLOCK-IDX ####
####                           ####
###################################

### Device file
10sf-tm1-nl-device = databases/tm1-db-10sf-nl

### Device quota (in KB)
### 200MB
10sf-tm1-nl-devicequota = 204800

### Buffer pool size (in KB)
### 1GB (db in memory)
10sf-tm1-nl-bufpoolsize = 1024000

### Location of log directory
10sf-tm1-nl-logdir = log-tm1-10-nl

### Size of log (in KB)
### 1GB 
10sf-tm1-nl-logsize = 1024000

### Size of log buffer (in KB)
### 80MB
10sf-tm1-nl-logbufsize = 81920

### tm1-sf
#10sf-tm1-nl-sf = 2
10sf-tm1-nl-sf = 10

### dora-sf
10sf-tm1-nl-dora-sf = 1

### system
10sf-tm1-nl-system = dora

### benchmark
10sf-tm1-nl-benchmark = tm1



####################################
####                            ####
#### 100SF TM-1 DB + NOLOCK-IDX ####
####                            ####
####################################

### Device file
100sf-tm1-nl-device = databases/r-tm1-db-100sf-nl

### Device quota (in KB)
### 2GB
100sf-tm1-nl-devicequota = 2097152

### Buffer pool size (in KB)
### 2GB (db in memory)
100sf-tm1-nl-bufpoolsize = 2097152

### Location of log directory
100sf-tm1-nl-logdir = r-log-tm1-100-nl

### Number of logs
100sf-tm1-nl-logcount = 1

### Size of log (in KB)
### 1500MB * logcount = 1.5GB
100sf-tm1-nl-logsize = 1536000

### Size of log buffer (in KB)
### 80MB * logcount = 80MB
100sf-tm1-nl-logbufsize = 81920

### tm1-sf
100sf-tm1-nl-sf = 100

### dora-sf
100sf-tm1-nl-dora-sf = 1

### system
100sf-tm1-nl-system = dora

### benchmark
100sf-tm1-nl-benchmark = tm1



############################################################################
#                                                                          #
# EOF Predefined configurations                                            #
#                                                                          #
############################################################################



##### DORA parameters


# dora worker thread binding policy
# 0=NoBinding,1=Other
dora-cpu-binding = 0

# starting cpu - the initial cpu of the dora tables
dora-cpu-starting = 2

# table-step - the number of cpus between two tables
dora-cpu-table-step = 16

# partition-step - the number of cpus between two partitions of the same table
dora-cpu-partition-step = 2



##### DORA TPC-C setup

# IP: Baseline 
dora-tpcc-wh-per-part-wh    = 1
dora-tpcc-wh-per-part-dist  = 1
dora-tpcc-wh-per-part-cust  = 1
dora-tpcc-wh-per-part-hist  = 1

dora-tpcc-wh-per-part-nord  = 1
dora-tpcc-wh-per-part-ord   = 1
dora-tpcc-wh-per-part-item  = 1
dora-tpcc-wh-per-part-oline = 1
dora-tpcc-wh-per-part-stock = 1

# IP: Only one
#dora-tpcc-wh-per-part-wh    = 100 
#dora-tpcc-wh-per-part-dist  = 100
#dora-tpcc-wh-per-part-cust  = 100
#dora-tpcc-wh-per-part-hist  = 100

#dora-tpcc-wh-per-part-nord  = 100
#dora-tpcc-wh-per-part-ord   = 100
#dora-tpcc-wh-per-part-item  = 100
#dora-tpcc-wh-per-part-oline = 100
#dora-tpcc-wh-per-part-stock = 100


# IP: The optimal for PAY
#dora-tpcc-wh-per-part-wh    = 12
#dora-tpcc-wh-per-part-dist  = 12
#dora-tpcc-wh-per-part-cust  = 8
#dora-tpcc-wh-per-part-hist  = 3



WAREHOUSE-inp-q-sz = 0
WAREHOUSE-com-q-sz = 0

DISTRICT-inp-q-sz = 0
DISTRICT-com-q-sz = 0

CUSTOMER-inp-q-sz = 0
CUSTOMER-com-q-sz = 0

HISTORY-inp-q-sz = 0
HISTORY-com-q-sz = 0

NEW_ORDER-inp-q-sz = 0
NEW_ORDER-com-q-sz = 0

ORDER-inp-q-sz = 0
ORDER-com-q-sz = 0

ITEM-inp-q-sz = 0
ITEM-com-q-sz = 0

ORDERLINE-inp-q-sz = 0
ORDERLINE-com-q-sz = 0

STOCK-inp-q-sz = 0
STOCK-com-q-sz = 0




##### DORA TM1 setup

dora-tm1-sf-per-part-sub = 1
dora-tm1-sf-per-part-ai  = 100
dora-tm1-sf-per-part-sf  = 100
dora-tm1-sf-per-part-cf  = 100

#note: For TM1-UpdSubData SUB:SF 2:1 !

# TM1-MIX
#dora-tm1-sf-per-part-sub = 2
#dora-tm1-sf-per-part-ai  = 3
#dora-tm1-sf-per-part-sf  = 8
#dora-tm1-sf-per-part-cf  = 8

# TM1-GetSubData
#dora-tm1-sf-per-part-sub = 330
#dora-tm1-sf-per-part-ai  = 200
#dora-tm1-sf-per-part-sf  = 330
#dora-tm1-sf-per-part-cf  = 200


SUBSCRIBER-inp-q-sz = 1
SUBSCRIBER-com-q-sz = 0

ACCESS_INFO-inp-q-sz = 1
ACCESS_INFO-com-q-sz = 0

SPECIAL_FACILITY-inp-q-sz = 1
SPECIAL_FACILITY-com-q-sz = 0

CALL_FORWARDING-inp-q-sz = 1
CALL_FORWARDING-com-q-sz = 0
